name: Python CI

on:
  push:
    paths-ignore: ['docs/**', 'docsrc/**', 'fittrackee_client/**', '*.md']
  pull_request:
    paths-ignore: ['docs/**', 'docsrc/**', 'fittrackee_client/**', '*.md']

env:
  APP_SETTINGS: fittrackee.config.TestingConfig
  DATABASE_TEST_URL: "postgresql://fittrackee:fittrackee@postgres:5432/fittrackee_test"
  EMAIL_URL: "smtp://none:none@0.0.0.0:1025"
  FLASK_APP: fittrackee/__main__.py
  SENDER_EMAIL: fittrackee@example.com

jobs:
  python:
    name: python ${{ matrix.python-version }} (postgresql 14)
    runs-on: ubuntu-latest
    container: python:${{ matrix.python-version }}
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: fittrackee_test
          POSTGRES_USER: fittrackee
          POSTGRES_PASSWORD: fittrackee
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        python-version:  [ "3.7", "3.8", "3.9", "3.10", "3.11" ]
    steps:
      - uses: actions/checkout@v2
      - name: Install Poetry and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --quiet poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --quiet
      - name: Bandit
        if: matrix.python-version == '3.10'
        run: bandit -r fittrackee -c pyproject.toml
      - name: Lint
        if: matrix.python-version == '3.10'
        run: pytest --flake8 --isort --black -m "flake8 or isort or black" fittrackee e2e --ignore=fittrackee/migrations -p no:warnings
      - name: Mypy
        if: matrix.python-version == '3.10'
        run: mypy fittrackee
      - name: Pytest
        run: pytest fittrackee -p no:warnings --cov fittrackee --cov-report term-missing

  postgresql:
    name: postgresql ${{ matrix.psql-version }} (python 3.10)
    runs-on: ubuntu-latest
    container: python:3.10
    services:
      postgres:
        image: postgres:${{ matrix.psql-version }}
        env:
          POSTGRES_DB: fittrackee_test
          POSTGRES_USER: fittrackee
          POSTGRES_PASSWORD: fittrackee
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        psql-version:  [ "11", "12", "13", "15" ]
    steps:
      - uses: actions/checkout@v2
      - name: Install Poetry and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --quiet poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --quiet
      - name: Pytest
        run: pytest fittrackee -p no:warnings --cov fittrackee --cov-report term-missing

  end2end:
    runs-on: ubuntu-latest
    needs: ["python"]
    container: python:3.10
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: fittrackee_test
          POSTGRES_USER: fittrackee
          POSTGRES_PASSWORD: fittrackee
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      selenium:
        image: selenium/standalone-firefox
      mailhog:
        image: mailhog/mailhog:latest
      redis:
        image: redis:latest
    env:
      APP_SETTINGS: fittrackee.config.End2EndTestingConfig
      EMAIL_URL: "smtp://mailhog:1025"
      REDIS_URL: "redis://redis:6379"
    steps:
      - uses: actions/checkout@v2
      - name: Install Poetry and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --quiet poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --quiet
      - name: Run migrations
        run: flask db upgrade --directory fittrackee/migrations
      - name: Start application and run tests with Selenium
        run: |
          setsid nohup flask run --with-threads -h 0.0.0.0 -p 5000 >> nohup.out 2>&1 &
          export TEST_APP_URL=http://$(hostname --ip-address):5000
          sleep 5
          nohup flask worker --processes=1 >> nohup.out 2>&1 &
          pytest e2e --driver Remote --capability browserName firefox --selenium-host selenium --selenium-port 4444
